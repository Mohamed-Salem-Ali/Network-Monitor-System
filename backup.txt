# # Install necessary system dependencies
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     wireless-tools \
#     python3-dev \
#     network-manager \
#     iputils-ping \
#     net-tools \
#     iproute2 \
#     dbus \
#     curl \
#     && apt-get clean \
#     && rm -rf /var/lib/apt/lists/*

# # Install Speedtest CLI (Python-based and Ookla version)
# # - Install Python `speedtest-cli` via pip (from requirements.txt)
# # - Install Ookla's CLI manually
# RUN curl -Lo /tmp/speedtest.tgz https://install.speedtest.net/app/cli/ookla-speedtest-1.2.0-linux-x86_64.tgz \
#     && tar -xzf /tmp/speedtest.tgz -C /usr/local/bin \
#     && chmod +x /usr/local/bin/speedtest \
#     && rm /tmp/speedtest.tgz

FROM python:3.10-slim

# Install NetworkManager and systemd dependencies
RUN apt update && apt install -y network-manager systemd && \
    apt clean && rm -rf /var/lib/apt/lists/*

# Copy your application code
COPY . /app
WORKDIR /app

# Command to start NetworkManager and your app
CMD ["/bin/bash", "-c", "service network-manager start && python app.py"]



Dockerfile

# Use Ubuntu 20.04 base image
FROM ubuntu:20.04


# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Africa/Cairo

# Install required tools and dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    wireless-tools \
    python3-dev \
    network-manager \
    iputils-ping \
    net-tools \
    iproute2 \
    dbus \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Optionally, install Python if needed for your app
RUN apt-get update && apt-get install -y python3 python3-pip


# # Add the start script
COPY start_script.sh /etc/init/start_script.sh

# # Ensure the script is executable
RUN chmod +x /etc/init/start_script.sh

# Set working directory
WORKDIR /app

# Copy project files
COPY requirements.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt
COPY . .

# Expose any ports your app needs
EXPOSE 5000

# Start the NetworkManager service
ENTRYPOINT ["/etc/init/start_script.sh"]


docker_compose ubuntu 

version: "3.9"

services:
  speedtest:
    build:
      context: .
    container_name: speedtest_service
    network_mode: host # Uses host's network stack
    privileged: true # Grants extended privileges to access the network interface
    environment:
      - NETWORK_NAME=${NETWORK_NAME}
      - NETWORK_PASSWORD=${NETWORK_PASSWORD}
      - SPEEDTEST_INTERVAL=${SPEEDTEST_INTERVAL}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket # Mount DBus socket
    command: ["python3", "speedtest_main.py"]

  device-count:
    build:
      context: .
    container_name: device_count_service
    network_mode: host # Uses host's network stack
    privileged: true # Grants extended privileges to access the network interface
    environment:
      - NETWORK_NAME=${NETWORK_NAME}
      - NETWORK_PASSWORD=${NETWORK_PASSWORD}
      - DEVICE_COUNT_INTERVAL=${DEVICE_COUNT_INTERVAL}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket # Mount DBus socket
    command: ["python3", "devicecCount_main.py"]


